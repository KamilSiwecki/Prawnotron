using System.IO;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;

namespace Prawnotron
{

    /// <summary>
    /// Model ustawy pobieranej z API
    /// </summary>
    /// <autogeneratedoc />
     public class Ustawa {
        /// <summary>
        /// ID ustawy w API
        /// </summary>
        public string Id { get; private set; }
        /// <summary>
        /// ID używane do pobrania treści ustawy
        /// </summary>
        public string DokumentId { get; private set; }

         string IsapPlikDokumentId { get; set; }
         string IsapId { get; set; }
         string StatusId { get; set; }

         int Rok { get; set; }
         int Poz { get; set; }
         int Nr { get; set; }
         string Sygnatura { get; set; }

         string DataPublikacji { get; set; }
         string DataWydania { get; set; }
         string DataWejsciaWZycie { get; set; }

         string Label { get; set; }
         string Tytul { get; set; }
         string TytulSkrocony { get; set; }
         string AutorNazwa { get; set; }
         string Zrodlo { get; set; }


         string Kodeks { get; set; }
         int LiczbaZalacznikow { get; set; }
         string TypNazwa { get; set; }

        /// <summary>
        /// Metoda usuwająca nazwę datasetu z parametrów we wskazanym pliku <c>JSON</c>
        /// </summary>
        /// <param name="jsonPath">ścieżka do pliku <c>JSON</c></param><seealso cref="File"/>
        /// <param name="dataset">nazwa datasetu z API, np. prawo, dziennik_ustaw. Domyślnie "dziennik_ustaw"</param>
        static void RemoveDatasetName(string jsonPath, string dataset = "dziennik_ustaw.")
        {
            string text = File.ReadAllText(jsonPath);
            text = text.Replace(dataset, "");
            File.WriteAllText(jsonPath, text);
        }

        /// <summary>
        /// Deserialuje pliki <c>JSON</c> do klasy Ustawa <see cref="Ustawa"/>, korzystając z zamiany na
        /// </summary>
        /// <param name="id">ścieżka do pliku <c>JSON</c> <seealso cref="int"/></param>
        /// <returns>Deserializowany obiekt klasy Ustawa</returns>
        static Ustawa ParseUstawa(int id)
        {
            string p = $"../../Json/ustawa_{id}.json";
            RemoveDatasetName(p);
            //Ustawa ustawa = JsonConvert.DeserializeObject<Ustawa>(File.ReadAllText(path));

            string ustStr = File.ReadAllText(p);

            JObject mpResult = JObject.Parse(ustStr);
            JToken result = mpResult["data"];

            Ustawa ustawa = JsonConvert.DeserializeObject<Ustawa>(result.ToString());
            return ustawa;
        }

        /// <summary>
        /// Konstruktor klasy Ustawa, deserializujący z pliku JSON.
        /// <seealso cref="ParseUstawa"/>
        /// </summary>
        /// <param name="id">nazwa pliku JSON z danymi o ustawie</param>
        public Ustawa(int id)
        {
            // this = ParseUstawa(id) ??????
            Ustawa u = ParseUstawa(id);
            this.AutorNazwa = u.AutorNazwa;
        }
    }
 }
